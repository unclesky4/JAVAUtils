 ### 配置根Logger ###
 ### log4j.rootLogger  =   [level]   ,  appenderName1 ,  appenderName2 , …  
 ###[level] 是日志输出级别，共有5级： FATAL 0; ERROR 3; WARN 4; INFO 6; DEBUG 7 ###
log4j.rootLogger = DEBUG,stdout,D
log4j.rootLogger = INFO,stdout,I
log4j.rootLogger = WARN,stdout,W
log4j.rootLogger = ERROR,stdout,E

### stdout ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
### log4j.appender.stdout.Encoding=UTF-8  
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### DEBUG --> E://logs/debug.log ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
### log4j.appender.D.Encoding=UTF-8  
log4j.appender.D.File = /home/uncle/Desktop/logs/debug.log
log4j.appender.D.Append = true
### 输出DEBUG级别以上的日志
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### WARN --> E://logs/warn.log ###
log4j.appender.W = org.apache.log4j.DailyRollingFileAppender
### log4j.appender.W.Encoding=UTF-8  
log4j.appender.W.File = /home/uncle/Desktop/logs/warn.log
log4j.appender.W.Append = true
## 输出WARN级别以上的日志
log4j.appender.W.Threshold = WARN
log4j.appender.W.layout = org.apache.log4j.PatternLayout
log4j.appender.W.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### ERROR --> E://logs/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
### log4j.appender.E.Encoding=UTF-8  
log4j.appender.E.File =/home/uncle/Desktop/logs/error.log 
log4j.appender.E.Append = true
## 输出ERROR级别以上的日志
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  method:%l %m%n


### log4j具有5种正常级别(Level)：
### 1.static Level DEBUG :
###     DEBUG Level指出细粒度信息事件对调试应用程序是非常有帮助的。
### 2.static Level INFO
###     INFO level表明 消息在粗粒度级别上突出强调应用程序的运行过程。
### 3.static Level WARN
###    WARN level表明会出现潜在错误的情形。
### 4.static Level ERROR
###    ERROR level指出虽然发生错误事件，但仍然不影响系统的继续运行。
### 5.static Level FATAL
###    FATAL level指出每个严重的错误事件将会导致应用程序的退出。
###